name: Build and Publish Release

on:
  push: 
    branches:
      - main

jobs:
  npmRunBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: |
          npm install -g pnpm@8.5.1 shx@0.3.4
          pnpm install

      - name: Change version
        run: |
          git config --global user.name "CICD"
          git config --global user.email "ojosdeserbio@gmail.com"
          npm version ${{ github.event.head_commit.message }}
          git add package.json
          git commit -m "[skip ci] Version update"
          git push

      - name: Build
        run:  pnpm run build

      - name: Prepare folders
        run: |
          mkdir output
          cp -r dist output/dist
          cp -r defaults/quickstart output/quickstart 
          cp defaults/rclone output/rclone
          cp decky_plugin.pyi output/decky_plugin.pyi
          cp LICENSE output/LICENSE
          cp main.py output/main.py
          cp package.json output/package.json
          cp plugin.json output/plugin.json
          cp README.md output/README.md

      - name: Archive dist folder
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: output
          retention-days: 1

  downloadRclone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fix permissions
        run: |
          chmod 777 -R .

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t my_backend_image ./backend
        working-directory: ${{ github.workspace }}

      - name: Run Docker container
        run: docker run -v ${{ github.workspace }}/backend:/backend my_backend_image
        working-directory: ${{ github.workspace }}

      - name: Archive rclone folder
        uses: actions/upload-artifact@v4
        with:
          name: rclone
          path: backend/out/rclone
          retention-days: 1

  prepareFolders:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [npmRunBuild, downloadRclone]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Change version
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ github.event.head_commit.message }}
          git-tag-version: 'false'

      - name: Retrieve version
        run: echo "GITHUB_PROJ_VERS=$(npm pkg get version | sed 's/\"//g')" >> $GITHUB_ENV

      - name: Prepare folders
        run: |
          mkdir output/bin
          cp rclone/rclone output/bin 
          mv output decky-cloud-save 
          zip decky-cloud-save-${{ env.GITHUB_PROJ_VERS }}.zip decky-cloud-save
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GITHUB_PROJ_VERS }}
          release_name: Release ${{ env.GITHUB_PROJ_VERS }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./decky-cloud-save-${{ env.GITHUB_PROJ_VERS }}.zip
          asset_name: decky-cloud-save-${{ env.GITHUB_PROJ_VERS }}.zip
          asset_content_type: application/zip
